#!/bin/bash

# Parameters
NTRIALS=$1
NWORKERS=$2
NTHREADS_PER_WORKER=$3
NCORES=$(( NTHREADS_PER_WORKER*2 ))
NJOBS=$4
TIMES=$5

NTRIALS_PER_WORKER=$(( NTRIALS/NWORKERS ))

for (( i=1; i<=$TIMES; i++ ))
do
    echo "--- Start trial $i"
    # Prepare
    rm hpo_study_checkpoint_* logs/*
    ./study delete
    ./study create

    # Execution
    #export OMP_NUM_THREADS=1
    echo "--- Starting $NWORKERS workers exploring $NTRIALS trials in total, each worker runs on ${NTHREADS_PER_WORKER} physical cores"
    start=$SECONDS
    cmd="srun -G 8 -n ${NWORKERS} -c ${NTHREADS_PER_WORKER} --ntasks-per-node=8 --gpus-per-task=1 --gpu-bind=map_gpu:0,1,2,3,4,5,6,7 --hint=nomultithread python main_optuna_db.py --trials ${NTRIALS_PER_WORKER} --jobs ${NJOBS} --cuda 1"
    #cmd="srun -G 2 -n ${NWORKERS} -c ${NTHREADS_PER_WORKER} --gpus-per-task=1 --gpu-bind=map_gpu:0,1 --hint=nomultithread nvprof --metrics all --normalized-time-unit us --csv --log-file test-%h-%q{SLURM_JOBID}-%q{SLURM_PROCID}.csv python main_optuna_db.py --trials ${NTRIALS_PER_WORKER} --jobs ${NJOBS} --cuda 1"
    echo ${cmd}
    ${cmd} &> log.db.${NTRIALS}_${NWORKERS}_${NTHREADS_PER_WORKER}_${NJOBS}.${i}
    #srun -N 1 -n ${NWORKERS} -c ${NTHREADS_PER_WORKER} -G 1 --hint=nomultithread python test.py &> log.db.${NWORKERS}_${NTHREADS_PER_WORKER}_${i}
    end=$SECONDS
    echo "Duration: $((end-start)) seconds." >> log.db.${NTRIALS}_${NWORKERS}_${NTHREADS_PER_WORKER}_${NJOBS}.${i}
    echo "--- End trial $i"
done
